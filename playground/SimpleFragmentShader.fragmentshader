#version 450 core

// Ouput data
out vec3 color;

// Input data
in vec3 fNormal;
in vec3 fPosition;
in vec3 fLight;

in vec3 coordinate;

uniform float iTime;

void main()
{
  // Light source and vertex information
  vec3 lightDirection = normalize(fLight);
  vec3 v = normalize(fPosition);       
  vec3 N = normalize(fNormal);
  
  // Material parameters
  vec3 materialColor = vec3(1, 1, 1);

  if (coordinate.z < -2.49) {
	materialColor = vec3(0.40, 0.7, 1);
  } else if (coordinate.z < -1.49) {
	materialColor = vec3(0.91, 0.83, 0.34);
  } else if (coordinate.z < 2.51) {
	materialColor = vec3(0.08, 0.65, 0.3);
  } else if (coordinate.z < 5.51) {
	materialColor = vec3(0.2, 0.2, 0.2);
  }

  float ka = 0.1;
  float ks = 0.7;
  float kd = 0.3;
  float shininess = 0.0;
  
  // Compute vectors for light model
  vec3 L = normalize(lightDirection - v);   
  vec3 E = normalize(vec3(0,0,0)-v); // we are in Eye Coordinates, so EyePos is (0,0,0)  
  vec3 R = normalize(-reflect(L,N)); 
  
  // Calculate Ambient Intensity:  
  float Iamb = ka;    

  // Calculate Diffuse Intensity:  
  float Idiff = kd * max(dot(N,L), 0.0);
  Idiff = clamp(Idiff, 0.0, 1.0);     

  // Calculate Specular Intensity:
  float Ispec = ks * pow(max(dot(R,E),0.0),0.3*shininess);
  Ispec = clamp(Ispec, 0.0, 1.0); 

  // Compute Total Intensity:  
  float Intensity = Iamb + Idiff + Ispec;   
  
  // Write Color:
  color = Intensity * materialColor;
}